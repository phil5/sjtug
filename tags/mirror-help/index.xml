<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mirror Help on SJTUG - A Joyful Techie User Group</title>
    <link>https://sjtug.org/tags/mirror-help/</link>
    <description>Recent content in Mirror Help on SJTUG - A Joyful Techie User Group</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 23 Oct 2020 10:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://sjtug.org/tags/mirror-help/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>gcr.io</title>
      <link>https://sjtug.org/post/mirror-help/gcr-io/</link>
      <pubDate>Fri, 23 Oct 2020 10:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/gcr-io/</guid>
      <description>&lt;p&gt;该镜像是 gcr.io 反代。将所有需要用到 gcr.io 的地址换成 gcr-io.mirrors.sjtug.sjtu.edu.cn 即可。比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker pull gcr-io.mirrors.sjtug.sjtu.edu.cn/google_containers/echoserver:1.4
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>git/opam-repository.git</title>
      <link>https://sjtug.org/post/mirror-help/opam-git/</link>
      <pubDate>Tue, 13 Oct 2020 19:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/opam-git/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://opam.ocaml.org&#34;&gt;opam&lt;/a&gt; 是 OCaml 的包管理器。SJTUG 提供 opam 的反代服务。&lt;/p&gt;

&lt;p&gt;首次使用 opam，可以使用 SJTUG 镜像源初始化 opam。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;opam init default https://mirrors.sjtug.sjtu.edu.cn/git/opam-repository.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用下面的指令，可以将默认源替换为 SJTUG 镜像。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;opam repo set-url default https://mirrors.sjtug.sjtu.edu.cn/git/opam-repository.git --all --set-default
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>emacs-elpa</title>
      <link>https://sjtug.org/post/mirror-help/emacs-elpa/</link>
      <pubDate>Fri, 14 Aug 2020 14:55:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/emacs-elpa/</guid>
      <description>

&lt;p&gt;emacs-elpa 包含了 GNU ELPA, NonGNU ELPA, MELPA, MELPA Stable, Marmalade, Org, Sunrise Commander ELPA, user42 ELPA 这 8 个镜像。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ELPA&lt;/th&gt;
&lt;th&gt;镜像地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://elpa.gnu.org/&#34;&gt;GNU ELPA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://elpa.gnu.org/nongnu/&#34;&gt;NonGNU ELPA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/nongnu/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/nongnu/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://melpa.org/&#34;&gt;MELPA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://stable.melpa.org/#/&#34;&gt;MELPA Stable&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa-stable/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa-stable/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://marmalade-repo.org/&#34;&gt;Marmalade&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/marmalade/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/marmalade/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://orgmode.org/elpa.html&#34;&gt;Org&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/org/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/org/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.emacswiki.org/emacs/Sunrise_Commander&#34;&gt;Sunrise Commander ELPA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/sunrise-commander/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/sunrise-commander/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://user42.tuxfamily.org/elpa/index.html&#34;&gt;user42 ELPA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/user42/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/user42/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;

&lt;p&gt;根据你的需求，设置 &lt;code&gt;package-archives&lt;/code&gt; ，比如用 GNU ELPA 和 MELPA：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(setq package-archives &#39;((&amp;quot;gnu&amp;quot; . &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&amp;quot;)
                         (&amp;quot;melpa&amp;quot; . &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&amp;quot;)))

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;spacemacs-用户&#34;&gt;Spacemacs 用户&lt;/h3&gt;

&lt;h4 id=&#34;master-分支&#34;&gt;master 分支&lt;/h4&gt;

&lt;p&gt;添加下面的代码到  &lt;code&gt;.spacemacs&lt;/code&gt;  的  &lt;code&gt;dotspacemacs/user-init()&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(setq configuration-layer--elpa-archives
    &#39;((&amp;quot;melpa-cn&amp;quot; . &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&amp;quot;)
      (&amp;quot;org-cn&amp;quot;   . &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/org/&amp;quot;)
      (&amp;quot;gnu-cn&amp;quot;   . &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;develop-分支&#34;&gt;develop 分支&lt;/h4&gt;

&lt;p&gt;使用 &lt;code&gt;configuration-layer-elpa-archives&lt;/code&gt; 代替原来的 &lt;code&gt;configuration-layer--elpa-archives&lt;/code&gt; （ &lt;code&gt;--&lt;/code&gt; 换成 &lt;code&gt;-&lt;/code&gt; ）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(setq configuration-layer-elpa-archives
    &#39;((&amp;quot;melpa-cn&amp;quot; . &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&amp;quot;)
      (&amp;quot;org-cn&amp;quot;   . &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/org/&amp;quot;)
      (&amp;quot;gnu-cn&amp;quot;   . &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;cask-用户&#34;&gt;Cask 用户&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/cask/cask&#34;&gt;Cask&lt;/a&gt; 是一个 Emacs Lisp 的项目管理工具。这里还是以 GNU ELPA 和 MELPA 为例，在添加下面的代码到 Cask&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-lisp&#34;&gt;(source &amp;quot;gnu&amp;quot;   &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&amp;quot;)
(source &amp;quot;melpa&amp;quot; &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;本镜像上游为 &lt;a href=&#34;https://elpa.emacs-china.org&#34;&gt;https://elpa.emacs-china.org&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;SJTUG 不提供 rsync 镜像。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>julia</title>
      <link>https://sjtug.org/post/mirror-help/julia/</link>
      <pubDate>Wed, 05 Aug 2020 12:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/julia/</guid>
      <description>

&lt;p&gt;SJTUG 目前提供了 Julia 的官方包注册表 &lt;a href=&#34;https://github.com/JuliaRegistries/General&#34;&gt;General&lt;/a&gt; 镜像来加速 Julia 包的安装。&lt;/p&gt;

&lt;p&gt;关于 Julia 的安装，请使用 &lt;code&gt;julia-releases&lt;/code&gt; 镜像。&lt;/p&gt;

&lt;p&gt;注：本镜像的使用需要 Julia &lt;code&gt;v1.4.0&lt;/code&gt; 或更新的版本。&lt;/p&gt;

&lt;h2 id=&#34;使用方式&#34;&gt;使用方式&lt;/h2&gt;

&lt;p&gt;只需要设置环境变量 &lt;code&gt;JULIA_PKG_SERVER=https://mirrors.sjtug.sjtu.edu.cn/julia&lt;/code&gt; 即可切换镜像。若成功切换镜像，则能通过 &lt;code&gt;versioninfo()&lt;/code&gt; 查询到相关信息，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;julia&amp;gt; versioninfo()
Julia Version 1.5.0
Commit 96786e22cc (2020-08-01 23:44 UTC)
Platform Info:
  OS: macOS (x86_64-apple-darwin18.7.0)
  CPU: Intel(R) Core(TM) i9-9880H CPU @ 2.30GHz
  WORD_SIZE: 64
  LIBM: libopenlibm
  LLVM: libLLVM-9.0.1 (ORCJIT, skylake)
Environment:
  JULIA_PKG_SERVER = https://mirrors.sjtug.sjtu.edu.cn/julia
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若不设置该环境变量则默认使用官方服务器 &lt;code&gt;pkg.julialang.org&lt;/code&gt; 作为上游。本镜像站是其国内服务器的数据上游之一。&lt;/p&gt;

&lt;h3 id=&#34;临时使用&#34;&gt;临时使用&lt;/h3&gt;

&lt;p&gt;不同系统和命令行下设置环境变量的方式各不相同，在命令行下可以通过以下方式来临时修改环境变量&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linux Bash: &lt;code&gt;export JULIA_PKG_SERVER=https://mirrors.sjtug.sjtu.edu.cn/julia&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows Powershell: &lt;code&gt;$env:JULIA_PKG_SERVER = &#39;https://mirrors.sjtug.sjtu.edu.cn/julia&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;也可以利用 JuliaCN 社区维护的中文本地化工具包 &lt;a href=&#34;https://github.com/JuliaCN/JuliaZH.jl&#34;&gt;JuliaZH&lt;/a&gt; 来进行切换：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;using JuliaZH # 在 using 时会自动切换到国内的镜像站
JuliaZH.set_mirror(&amp;quot;SJTUG&amp;quot;) # 也可以选择手动切换到 BFSU 镜像
JuliaZH.mirrors # 查询记录的上游信息
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;永久使用&#34;&gt;永久使用&lt;/h3&gt;

&lt;p&gt;不同系统和命令行下永久设定环境变量的方式也不相同，例如 Linux Bash 下可以通过修改 &lt;code&gt;~/.bashrc&lt;/code&gt; 文件实现该目的：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ~/.bashrc
export JULIA_PKG_SERVER=https://mirrors.sjtug.sjtu.edu.cn/julia
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此外，这里再提供一种针对 Julia 的全平台通用的方式：&lt;code&gt;$JULIA_DEPOT_PATH/config/startup.jl&lt;/code&gt;
( 默认为 &lt;code&gt;~/.julia/config/startup.jl&lt;/code&gt; ) 文件定义了每次启动 Julia 时都会执行的命令，编辑该文件，添加以下内容即可：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# ~/.julia/config/startup.jl
ENV[&amp;quot;JULIA_PKG_SERVER&amp;quot;] = &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/julia&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以选择使用 &lt;code&gt;JuliaZH&lt;/code&gt; 来一键修改/创建 &lt;code&gt;startup.jl&lt;/code&gt; 文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;julia&amp;gt; JuliaZH.generate_startup(&amp;quot;SJTUG&amp;quot;)
┌ Info: 添加 PkgServer
│   服务器地址 = &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/julia&amp;quot;
└   配置文件 = &amp;quot;/root/.julia/config/startup.jl&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若要临时禁止，可以通过 &lt;code&gt;julia --startup-file=no&lt;/code&gt; 来取消执行 &lt;code&gt;startup.jl&lt;/code&gt; 文件。&lt;/p&gt;

&lt;h2 id=&#34;常见问题&#34;&gt;常见问题&lt;/h2&gt;

&lt;h3 id=&#34;加快-conda-jl-相关操作的速度&#34;&gt;加快 Conda.jl 相关操作的速度&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Conda.jl&lt;/code&gt; 的加速分为两部分：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;conda&lt;/code&gt; 的安装：如果系统中没有找到 &lt;code&gt;conda&lt;/code&gt; 的话，&lt;code&gt;Conda.jl&lt;/code&gt; 会下载并安装一份 miniconda。如果这一步下载非常缓慢的话，你可以提前从 &lt;a href=&#34;https://mirrors.bfsu.edu.cn/anaconda/archive/&#34;&gt;BFSU 镜像站&lt;/a&gt;下载并安装 anaconda，然后通过设置环境变量 &lt;code&gt;CONDA_JL_HOME=$HOME/anaconda3&lt;/code&gt; 来指定 &lt;code&gt;Conda.jl&lt;/code&gt; 所使用的&lt;code&gt;conda&lt;/code&gt;，这样就避免重复下载 &lt;code&gt;miniconda&lt;/code&gt;. （&lt;code&gt;$HOME/anaconda3&lt;/code&gt;是 anaconda3 的默认安装位置，你可能需要根据具体情况进行调整。）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conda add&lt;/code&gt; 等操作的加速：这个只需要配置 anaconda 镜像源即可，即修改 &lt;code&gt;~/.condarc&lt;/code&gt; 文件。具体的配置可以查看镜像站中 anaconda 镜像的使用说明。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;为什么有些包的下载还是很慢&#34;&gt;为什么有些包的下载还是很慢？&lt;/h3&gt;

&lt;p&gt;有两类数据不会被镜像：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;deps/build.jl&lt;/code&gt; 文件中硬编码的下载地址，例如 &lt;a href=&#34;https://github.com/jheinen/GR.jl/blob/70f025d5cb439d036409f1985107cb5e1615097f/deps/build.jl#L116&#34;&gt;GR&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;Artifacts.toml&lt;/code&gt; 中没有给出 &lt;code&gt;download&lt;/code&gt; 项的资源, 例如 &lt;a href=&#34;https://github.com/JuliaImages/TestImages.jl/blob/eaa94348df619c65956e8cfb0032ecddb7a29d3a/Artifacts.toml&#34;&gt;TestImages&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在安装包含这两类数据的包时，其数据依然是从原始地址进行下载，因此若网络不稳定则可能会在 &lt;code&gt;build&lt;/code&gt; 阶段报错。&lt;/p&gt;

&lt;h3 id=&#34;为什么注册表还是从原地址下载&#34;&gt;为什么注册表还是从原地址下载？&lt;/h3&gt;

&lt;p&gt;Julia &lt;code&gt;v1.4.0&lt;/code&gt; 之前的版本采用的是 &lt;code&gt;git clone&lt;/code&gt; 的方式拉取注册表。为了保持兼容性，如果现有的注册表是一个完整的 git 仓库的话，
那么即使设置了 PkgServer 作为上游镜像也依然会通过 &lt;code&gt;git&lt;/code&gt; 来进行更新，换句话说，不会通过镜像站来下载注册表数据。&lt;/p&gt;

&lt;p&gt;以默认注册表 &lt;code&gt;General&lt;/code&gt; 为例，只需要手动将其重置到镜像站即可：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;删除当前注册表：&lt;code&gt;(@v1.4) pkg&amp;gt; registry rm General&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;从镜像站重新下载数据：&lt;code&gt;(@v1.4) pkg&amp;gt; registry add General&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;为什么有些包还是从原地址下载&#34;&gt;为什么有些包还是从原地址下载？&lt;/h3&gt;

&lt;p&gt;镜像站只镜像注册表中记录的包，因此如果某些包是通过指定 URL 的方式来安装的话，那么该包的更新不会从镜像站进行下载。
这常见于那些还未注册的包及其版本，例如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;]add Flux#master
]add https://github.com/FluxML/Flux.jl.git
Pkg.add(PackageSpec(url=&amp;quot;https://github.com/FluxML/Flux.jl.git&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>julia-releases</title>
      <link>https://sjtug.org/post/mirror-help/julia-releases/</link>
      <pubDate>Wed, 05 Aug 2020 12:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/julia-releases/</guid>
      <description>

&lt;h2 id=&#34;julia-二进制安装程序&#34;&gt;Julia 二进制安装程序&lt;/h2&gt;

&lt;p&gt;Julia 是一个全新的以科学计算为核心的通用编程语言，本镜像为其二进制发行程序。关于 Julia 下各种工具包的安装，请使用 &lt;code&gt;julia&lt;/code&gt; 镜像。&lt;/p&gt;

&lt;p&gt;这里仅镜像 &lt;a href=&#34;https://julialang.org/downloads/&#34;&gt;JuliaLang Downloads&lt;/a&gt; 中提供的稳定发行版以及 rc 版本。每日构建的测试版 (nightlies) 以及
&lt;a href=&#34;http://junolab.org/&#34;&gt;Juno&lt;/a&gt;/&lt;a href=&#34;https://juliacomputing.com/products/juliapro&#34;&gt;Julia Pro&lt;/a&gt;等 IDE 版本不包括在内。&lt;/p&gt;

&lt;p&gt;尽管一些包管理工具（例如 &lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;pacman&lt;/code&gt;, &lt;code&gt;conda&lt;/code&gt;, &lt;code&gt;choco&lt;/code&gt;) 中提供有 Julia，但是这些工具或多或少都存在一些由二进制
依赖导致的问题，因此官方推荐的方式是根据自己的使用平台下载相应的二进制程序，然后通过解压的方式进行手动安装。&lt;/p&gt;

&lt;h2 id=&#34;julia-一键安装&#34;&gt;Julia 一键安装&lt;/h2&gt;

&lt;p&gt;对于习惯命令行的用户而言，&lt;a href=&#34;https://github.com/johnnychen94/jill.py&#34;&gt;jill.py&lt;/a&gt; 是一个社区维护的全平台下一键安装
Julia 的命令行工具。&lt;/p&gt;

&lt;p&gt;安装/更新 &lt;code&gt;jill&lt;/code&gt;： &lt;code&gt;pip install jill --user -U&lt;/code&gt; (需要 Python &lt;code&gt;3.6&lt;/code&gt; 或更新的版本)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装 Julia：&lt;code&gt;jill install [VERSION] [--upstream UPSTREAM] [--confirm]&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jill install&lt;/code&gt;：最新的 &lt;code&gt;x.y.z&lt;/code&gt; 版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jill install --confirm&lt;/code&gt;：无需交互确认直接安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jill install --upstream SJTUG&lt;/code&gt;：从本镜像站下载并安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jill install 1.5&lt;/code&gt;：安装最新的 &lt;code&gt;1.5.z&lt;/code&gt; 版本&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;查询现存的上游镜像：&lt;code&gt;jill upstream&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;帮助文档：&lt;code&gt;jill [COMMAND] --help&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jill --help&lt;/code&gt;：查询存在的 &lt;code&gt;jill&lt;/code&gt; 命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jill install --help&lt;/code&gt;：查询 &lt;code&gt;install&lt;/code&gt; 命令的使用方式&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;利用 &lt;code&gt;jill&lt;/code&gt; 安装完成后即可通过在命令行执行 &lt;code&gt;julia&lt;/code&gt;/&lt;code&gt;julia-1&lt;/code&gt;/&lt;code&gt;julia-1.5&lt;/code&gt; 来启动不同版本的 Julia.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mongodb</title>
      <link>https://sjtug.org/post/mirror-help/mongodb/</link>
      <pubDate>Sat, 01 Aug 2020 23:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/mongodb/</guid>
      <description>&lt;p&gt;mongodb 源是 &lt;a href=&#34;http://repo.mongodb.org&#34;&gt;repo.mongodb.org&lt;/a&gt; 的全量同步。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用说明&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;请参照官方教程配置并安装 &lt;a href=&#34;https://docs.mongodb.com/manual/administration/install-on-linux/&#34;&gt;https://docs.mongodb.com/manual/administration/install-on-linux/&lt;/a&gt;。
在安装过程中，把 &lt;code&gt;https://repo.mongodb.org/&lt;/code&gt; 替换为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/mongodb/&lt;/code&gt;。比如在 Ubuntu focal 中使用时，可以执行以下指令。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -
echo &amp;quot;deb [ arch=amd64,arm64 ] https://mirrors.sjtug.sjtu.edu.cn/mongodb/apt/ubuntu/ focal/mongodb-org/4.4 multiverse&amp;quot; | tee /etc/apt/sources.list.d/mongodb-org-4.4.list
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>crates.io</title>
      <link>https://sjtug.org/post/mirror-help/crates.io/</link>
      <pubDate>Thu, 09 Jul 2020 01:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/crates.io/</guid>
      <description>&lt;p&gt;编辑 &lt;code&gt;~/.cargo/config&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[source]

[source.mirror]
registry = &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index/&amp;quot;

[source.crates-io]
replace-with = &amp;quot;mirror&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>git/crates.io-index</title>
      <link>https://sjtug.org/post/mirror-help/creates.io.git/</link>
      <pubDate>Thu, 09 Jul 2020 01:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/creates.io.git/</guid>
      <description>&lt;p&gt;编辑 &lt;code&gt;~/.cargo/config&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[source]

[source.mirror]
registry = &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index/&amp;quot;

[source.crates-io]
replace-with = &amp;quot;mirror&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>cran</title>
      <link>https://sjtug.org/post/mirror-help/cran/</link>
      <pubDate>Sat, 04 Jul 2020 15:33:04 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/cran/</guid>
      <description>&lt;p&gt;使用方法：&lt;/p&gt;

&lt;p&gt;在安装时指定 repo。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;install.packages(&amp;quot;lattice&amp;quot;, repos=&amp;quot;https://mirrors.sjtug.sjtu.edu.cn/cran/&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 &lt;code&gt;.Rprofile&lt;/code&gt; 中设置默认 repo。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;options(repos=structure(c(CRAN=&amp;quot;https://mirrors.sjtug.sjtu.edu.cn/cran/&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>anaconda</title>
      <link>https://sjtug.org/post/mirror-help/anaconda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/anaconda/</guid>
      <description>&lt;p&gt;Anaconda 是一种 Python 语言的免费增值开源发行版，用于进行大规模数据处理, 预测分析, 和科学计算, 致力于简化包的管理和部署。Anaconda 使用软件包管理系统 conda 进行包管理。&lt;/p&gt;

&lt;p&gt;SJTUG 源镜像了常用的 conda 库，以方便科学计算用户使用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: 如果您正在从其他镜像源切换到 SJTUG，请检查我们是否同步了你所需要的 repo，以及该 repo 是否支持您使用的平台 (e.g. linux-64)。如果没有，请删除相关配置，并提出新镜像请求。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用说明&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;编辑 &lt;code&gt;~/.condarc&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;default_channels:
  - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/r
  - https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/main
custom_channels:
  conda-forge: https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/
  pytorch: https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/
channels:
  - defaults
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 &lt;code&gt;custom_channels&lt;/code&gt; 中您可以添加下面所列的其他第三方源。我们建议您使用上面的方法配置，而非执行下面的指令。&lt;/p&gt;

&lt;p&gt;您也可以使用&lt;code&gt;conda config --add channels https://anaconda.mirrors.sjtug.sjtu.edu.cn/{{你所需要的包名}}&lt;/code&gt;来将SJTUG源添加作为这个包的上游。目前镜像的包与安装命令包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;官方源&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pkgs/free&lt;/code&gt;: &lt;code&gt;conda config --add channels https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/free&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/main&lt;/code&gt;: &lt;code&gt;conda config --add channels https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/mro&lt;/code&gt;: &lt;code&gt;conda config --add channels https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/mro&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/msys2&lt;/code&gt;: &lt;code&gt;conda config --add channels https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/msys2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/pro&lt;/code&gt;: (deprecated) &lt;code&gt;conda config --add channels https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/pro&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/r&lt;/code&gt;: (empty) &lt;code&gt;conda config --add channels https://anaconda.mirrors.sjtug.sjtu.edu.cn/pkgs/r&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三方源&lt;/strong&gt;:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cloud/bioconda&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.bioconda https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/conda-forge&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.conda-forge https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/menpo&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.menpo https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/soumith&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.soumith https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/viscid-hub&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.viscid-hub https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/atztogo&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.atztogo https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/pytorch&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.pytorch https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/pytorch-test&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.pytorch-test https://anaconda.mirrors.sjtug.sjtu.edu.cn/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;此外，在 Conda 4.7 后，官方的 default 源组默认只包含 main 和 r (windows 会包含 msys2) channel，其他官方源仍支持手动添加。但官方建议不再使用 free channel，详见 &lt;a href=&#34;https://www.anaconda.com/why-we-removed-the-free-channel-in-conda-4-7/&#34;&gt;Why We Removed the “Free” Channel in Conda 4.7&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>archlinux</title>
      <link>https://sjtug.org/post/mirror-help/archlinux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/archlinux/</guid>
      <description>&lt;p&gt;Arch Linux 是通用 x86-64 GNU/Linux 发行版。Arch 采用滚动升级模式，尽全力提供最新的稳定版软件。初始安装的 Arch 只是一个基本系统，随后用户可以根据自己的喜好安装需要的软件并配置成符合自己理想的系统。&lt;/p&gt;

&lt;p&gt;使用方法：编辑 &lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt; 文件，添加 &lt;code&gt;Server = https://mirrors.sjtug.sjtu.edu.cn/archlinux/$repo/os/$arch&lt;/code&gt; 这一行，同时注释掉其它所有镜像，然后运行 &lt;code&gt;sudo pacman -Syy&lt;/code&gt; 更新软件包缓存。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>archlinux-cn</title>
      <link>https://sjtug.org/post/mirror-help/archlinux-cn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/archlinux-cn/</guid>
      <description>&lt;p&gt;Arch Linux 中文社区仓库 是由 Arch Linux 中文社区驱动的非官方用户仓库。包含中文用户常用软件、工具、字体/美化包等。&lt;/p&gt;

&lt;p&gt;完整的包信息列表（包名称/架构/维护者/状态）请 &lt;a href=&#34;https://github.com/archlinuxcn/repo&#34;&gt;点击这里&lt;/a&gt; 查看。&lt;/p&gt;

&lt;p&gt;仓库主地址：&lt;a href=&#34;http://repo.archlinuxcn.org/&#34;&gt;http://repo.archlinuxcn.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;使用方法：在 &lt;code&gt;/etc/pacman.conf&lt;/code&gt; 文件末尾添加以下两行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[archlinuxcn]
Server = https://mirrors.sjtug.sjtu.edu.cn/archlinux-cn/$arch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后，请执行下面的命令安装 archlinuxcn-keyring 包导入 GPG key。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -Sy archlinuxcn-keyring
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>archlinuxarm</title>
      <link>https://sjtug.org/post/mirror-help/archlinuxarm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/archlinuxarm/</guid>
      <description>&lt;p&gt;Arch Linux ARM 是在使用 ARM 架构处理器的计算机上运行的 Linux 发行版。它为许多主流的采用 ARM 处理器的硬件提供内核及应用程序支持，同时和 Arch Linux 一样具有提供最新的软件源、避免预安装多余软件包等特点。&lt;/p&gt;

&lt;p&gt;本仓库包含 Arch Linux ARM 的系统镜像及软件源。&lt;/p&gt;

&lt;p&gt;系统镜像使用方法：请访问 &lt;a href=&#34;https://archlinuxarm.org/platforms&#34;&gt;https://archlinuxarm.org/platforms&lt;/a&gt; ，阅读硬件平台对应的安装指引并下载对应的系统镜像。&lt;/p&gt;

&lt;p&gt;软件源使用方法：在 &lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt; 的文件顶端（所有镜像源的最上面）加上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Server = https://mirrors.sjtug.sjtu.edu.cn/archlinuxarm/$arch/$repo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;之后，请执行下面的命令更新软件包缓存。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pacman -Syy
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>dart-pub</title>
      <link>https://sjtug.org/post/mirror-help/dart-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/dart-packages/</guid>
      <description>&lt;p&gt;dart-pub 镜像全量同步了 Dart 语言官方仓库 &lt;a href=&#34;https://pub.dartlang.org&#34;&gt;https://pub.dartlang.org&lt;/a&gt; ，可以加速 Dart 包的下载。&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;p&gt;设置环境变量 &lt;code&gt;export PUB_HOSTED_URL=https://mirrors.sjtug.sjtu.edu.cn/dart-pub&lt;/code&gt; 即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>debian</title>
      <link>https://sjtug.org/post/mirror-help/debian/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/debian/</guid>
      <description>&lt;p&gt;Debian 是完全由自由软件组成的类UNIX操作系统，其包含的多数软件使用GNU通用公共许可协议授权，并由Debian计划的参与者组成团队对其进行打包、开发与维护。Debian以其坚守Unix和自由软件的精神，以及其给予用户的众多选择而闻名。现时Debian提供了超过25,000个软件[9]，超过50,000个软件包[10]，并正式支持10个计算机系统结构。&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;p&gt;先安装 ca-certificates apt-transport-https 保证第三方https源可以使用。&lt;/p&gt;

&lt;p&gt;再打开&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;，将类似于&lt;code&gt;http://deb.debian.org/debian/&lt;/code&gt;的地址均替换为&lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/debian/&lt;/code&gt;即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>docker-registry</title>
      <link>https://sjtug.org/post/mirror-help/docker-registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/docker-registry/</guid>
      <description>&lt;p&gt;docker-registry 源是 Docker Hub 的反向代理，可以加速&lt;code&gt;docker pull&lt;/code&gt;等需要下载镜像的命令。&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;p&gt;编辑或新建&lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;文件，向其中添加&lt;code&gt;registry-mirrors&lt;/code&gt;项，使最终配置类似：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;registry-mirrors&amp;quot;: [&amp;quot;https://docker.mirrors.sjtug.sjtu.edu.cn&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>fedora</title>
      <link>https://sjtug.org/post/mirror-help/fedora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/fedora/</guid>
      <description>&lt;p&gt;Fedora项目是一个由红帽公司所赞助，以统筹Fedora Linux操作系统开发的社区。Fedora 项目在建设开源软件社区的同时构建了一个被称为&amp;rdquo;Fedora&amp;rdquo;的 GNU/Linux 发行版。&lt;/p&gt;

&lt;p&gt;使用方法：
1. 备份旧的repoList：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mv /etc/yum.repos.d/fedora.repo /etc/yum.repos.d/fedora.repo.backup 
mv /etc/yum.repos.d/fedora-updates.repo /etc/yum.repos.d/fedora-updates.repo.backup 
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;把&lt;code&gt;/etc/yum.repos.d/fedora.repo&lt;/code&gt;换成以下内容：&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;[fedora] 
name=Fedora $releasever - $basearch - SJTUG
failovermethod=priority 
baseurl=https://mirrors.sjtug.sjtu.edu.cn/fedora/linux/releases/$releasever/Everything/$basearch/os/ 
#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-$releasever&amp;amp;arch=$basearch 
enabled=1 
metadata_expire=7d 
gpgcheck=1 
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$basearch 
 
[fedora-debuginfo] 
name=Fedora $releasever - $basearch - Debug - SJTUG
failovermethod=priority 
baseurl=https://mirrors.sjtug.sjtu.edu.cn/fedora/linux/releases/$releasever/Everything/$basearch/debug/ 
#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-debug-$releasever&amp;amp;arch=$basearch 
enabled=0 
metadata_expire=7d 
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$basearch 
 
[fedora-source] 
name=Fedora $releasever - Source - SJTUG
failovermethod=priority 
baseurl=https://mirrors.sjtug.sjtu.edu.cn/fedora/linux/releases/$releasever/Everything/source/SRPMS/ 
#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=fedora-source-$releasever&amp;amp;arch=$basearch 
enabled=0 
metadata_expire=7d 
gpgcheck=1 
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$basearch 
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;把&lt;code&gt;/etc/yum.repos.d/fedora-updates.repo&lt;/code&gt;换成以下内容：&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;[updates]
name=Fedora $releasever - $basearch - Updates - SJTUG
failovermethod=priority 
baseurl=https://mirrors.sjtug.sjtu.edu.cn/fedora/linux/updates/$releasever/$basearch/ 
#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=updates-released-f$releasever&amp;amp;arch=$basearch 
enabled=1 
gpgcheck=1 
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$basearch 
 
[updates-debuginfo] 
name=Fedora $releasever - $basearch - Updates - Debug - SJTUG
failovermethod=priority 
baseurl=https://mirrors.sjtug.sjtu.edu.cn/fedora/linux/updates/$releasever/$basearch/debug/ 
#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=updates-released-debug-f$releasever&amp;amp;arch=$basearch 
enabled=0 
gpgcheck=1 
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$basearch 
 
[updates-source] 
name=Fedora $releasever - Updates Source - SJTUG
failovermethod=priority 
baseurl=https://mirrors.sjtug.sjtu.edu.cn/fedora/linux/updates/$releasever/SRPMS/ 
#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=updates-released-source-f$releasever&amp;amp;arch=$basearch 
enabled=0 
gpgcheck=1 
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-$basearch 
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;运行&lt;code&gt;dnf makecache&lt;/code&gt;生成缓存&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>flutter_infra</title>
      <link>https://sjtug.org/post/mirror-help/flutter_infra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/flutter_infra/</guid>
      <description>

&lt;h2 id=&#34;欢迎使用-sjtug-镜像设置-flutter-开发环境&#34;&gt;欢迎使用 SJTUG 镜像设置 Flutter 开发环境&lt;/h2&gt;

&lt;p&gt;作为国内最早提供 Flutter 的镜像站，我们在近期对镜像站的更新中提高了 Flutter
镜像的稳定性，并解决了部分问题，欢迎大家使用！&lt;/p&gt;

&lt;p&gt;Flutter 是 Google 开源的 UI 工具包，帮助开发者通过一套代码库高效构建多平台精美应用，
支持移动、Web、桌面和嵌入式平台。&lt;/p&gt;

&lt;p&gt;Flutter 由 Google 主导，全球的开发者共同协作开发。中国的开发者数量占全球的 20%
以上，也有大量贡献者为 Flutter 的生态提供了很大的帮助和贡献。&lt;/p&gt;

&lt;p&gt;为了更好帮助国内的开发者、设计师和研究者等使用 Flutter，我们为 Flutter 的使用
提供了加速访问的服务。您需要将开发设备的如下两个环境变量设置指向 SJTUG 镜像：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PUB_HOSTED_URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FLUTTER_STORAGE_BASE_URL&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;linux-和-macos-系统设定-flutter-镜像&#34;&gt;Linux 和 macOS 系统设定 Flutter 镜像&lt;/h3&gt;

&lt;p&gt;执行如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PUB_HOSTED_URL=https://mirrors.sjtug.sjtu.edu.cn/dart-pub
export FLUTTER_STORAGE_BASE_URL=https://mirrors.sjtug.sjtu.edu.cn
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;windows-系统设定-flutter-镜像&#34;&gt;Windows 系统设定 Flutter 镜像&lt;/h3&gt;

&lt;p&gt;右键单击“我的电脑”，单击“属性” ——&amp;gt; “高级”选项卡 ——&amp;gt; “环境变量”&lt;/p&gt;

&lt;p&gt;在 “用户变量” 或 “系统变量” 中：&lt;/p&gt;

&lt;p&gt;单击“新建”添加新变量：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;变量名: &lt;code&gt;PUB_HOSTED_URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;值: &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/dart-pub&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;变量名: &lt;code&gt;FLUTTER_STORAGE_BASE_URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;值: &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;点击确定，保存生效。如果这两个变量名已经存在，点击编辑可修改变量值。&lt;/p&gt;

&lt;h3 id=&#34;设置-flutter-sdk-仓库镜像&#34;&gt;设置 Flutter SDK 仓库镜像&lt;/h3&gt;

&lt;p&gt;在 &lt;code&gt;flutter-sdk&lt;/code&gt; 仓库下，执行如下指令即可。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git remote set-url origin https://git.sjtu.edu.cn/sjtug/flutter-sdk.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;download-flutter-io-镜像&#34;&gt;download.flutter.io 镜像&lt;/h3&gt;

&lt;p&gt;访问 &lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/download.flutter.io/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/download.flutter.io/&lt;/a&gt; 即可。&lt;/p&gt;

&lt;h2 id=&#34;更多资源&#34;&gt;更多资源&lt;/h2&gt;

&lt;p&gt;感谢 flutter.cn 对 SJTUG 镜像测试的支持。
更多 Flutter 资源和中文文档，
请访问 Flutter 中文资源网站 (&lt;a href=&#34;https://flutter.cn&#34;&gt;flutter.cn&lt;/a&gt;)
和 Dart 中文文档网站 (&lt;a href=&#34;https://dart.cn&#34;&gt;dart.cn&lt;/a&gt;)。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>git/brew.git</title>
      <link>https://sjtug.org/post/mirror-help/brew-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/brew-git/</guid>
      <description>&lt;p&gt;本镜像是 Homebrew 自身的仓库，上游为&lt;code&gt;https://github.com/Homebrew/brew.git&lt;/code&gt;。在&lt;code&gt;git&lt;/code&gt;相关操作时使用&lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/git/brew.git&lt;/code&gt;替代上述地址即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>git/homebrew-cask.git</title>
      <link>https://sjtug.org/post/mirror-help/homebrew-cask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/homebrew-cask/</guid>
      <description>&lt;p&gt;homebrew-cask.git镜像了&lt;a href=&#34;https://github.com/Homebrew/homebrew-cask.git&#34;&gt;Homebrew Cask的描述文件，主要包括了较大的二进制文件与macOS应用&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;SJTUG镜像同时也提供了&lt;code&gt;homebrew-core&lt;/code&gt;和&lt;code&gt;brew-bottles&lt;/code&gt;镜像，欢迎大家使用。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd &amp;quot;$(brew --repo)&amp;quot;/Library/Taps/homebrew/homebrew-cask
git remote set-url origin https://mirrors.sjtug.sjtu.edu.cn/git/homebrew-cask.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后执行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew update
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>git/homebrew-core.git</title>
      <link>https://sjtug.org/post/mirror-help/homebrew-core/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/homebrew-core/</guid>
      <description>&lt;p&gt;homebrew-core.git镜像了&lt;a href=&#34;https://github.com/Homebrew/homebrew-core.git&#34;&gt;Homebrew官方的软件包描述文件&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;SJTUG镜像同时也提供了&lt;code&gt;homebrew-cask&lt;/code&gt;和&lt;code&gt;brew-bottles&lt;/code&gt;镜像，欢迎大家使用。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd &amp;quot;$(brew --repo)/Library/Taps/homebrew/homebrew-core&amp;quot;
git remote set-url origin https://mirrors.sjtug.sjtu.edu.cn/git/homebrew-core.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后执行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;brew update
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>google-fonts</title>
      <link>https://sjtug.org/post/mirror-help/google-fonts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/google-fonts/</guid>
      <description>&lt;p&gt;本镜像提供了 Google Fonts 的反向代理。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;link href=&amp;quot;https://fonts.googleapis.com/css?family=Roboto&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;改为&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;link href=&amp;quot;https://google-fonts.mirrors.sjtug.sjtu.edu.cn/css?family=Roboto&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>guix</title>
      <link>https://sjtug.org/post/mirror-help/guix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/guix/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://guix.gnu.org/&#34;&gt;GNU/Guix&lt;/a&gt;是隶属于GNU项目的自由软件发行版。Guix可以作为独立的操作系统发行版安装在计算机上，可以作为软件包管理器安装在别的Linux发行版上。
它的核心是一个函数式软件包管理器，支持事务性的升级、回滚操作。用户可以通过
&lt;a href=&#34;https://www.gnu.org/software/guile/&#34;&gt;Guile&lt;/a&gt;语言编写配置文件管理操作系统的服务或者管理用户安装的软件。&lt;/p&gt;

&lt;h2 id=&#34;git-镜像&#34;&gt;Git 镜像&lt;/h2&gt;

&lt;p&gt;Git 镜像的地址为 &lt;a href=&#34;https://git.sjtu.edu.cn/sjtug/guix.git&#34;&gt;https://git.sjtu.edu.cn/sjtug/guix.git&lt;/a&gt;。修改 &lt;code&gt;~/.config/guix/channels.scm&lt;/code&gt; 文件即可在 &lt;code&gt;guix pull&lt;/code&gt; 时使用。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(list (channel
       (inherit (car %default-channels))
       (url &amp;quot;https://git.sjtu.edu.cn/sjtug/guix.git&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;substitute-镜像&#34;&gt;Substitute 镜像&lt;/h2&gt;

&lt;p&gt;镜像地址为 &lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/guix&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/guix&lt;/a&gt;。
镜像实现方式为智能缓存，在镜像站用户首次访问某个 nar 或 narinfo 时，它会被永久缓存在镜像上；
之后的访问将直接从镜像服务器返回数据。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如果您使用 Guix 管理整个操作系统，请修改操作系统配置文件 ，替换
&lt;code&gt;substitute-urls&lt;/code&gt; 参数。例如：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-scheme&#34;&gt;(operating-system
  (services (modify-services %desktop-services
              (guix-service-type
               config =&amp;gt; (guix-configuration
                          (inherit config)
                          (substitute-urls &#39;(&amp;quot;https://mirrors.sjtug.sjtu.edu.cn/guix&amp;quot;
                                             &amp;quot;https://ci.guix.gnu.org&amp;quot;))))))
  ...
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;如果您在别的发行版上使用 Guix 包管理器，请修改 &lt;code&gt;guix-daemon&lt;/code&gt; 的
&lt;code&gt;--substitute-urls&lt;/code&gt; 参数。比如修改 &lt;code&gt;guix-daemon.service&lt;/code&gt; 的 &lt;code&gt;ExecStart&lt;/code&gt; 为：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --substitute-urls=&amp;quot;https://mirrors.sjtug.sjtu.edu.cn/guix&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;本文档的编写参考了 &lt;a href=&#34;https://guix.org.cn/wiki/mirror/&#34;&gt;https://guix.org.cn/wiki/mirror/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>homebrew-bottles</title>
      <link>https://sjtug.org/post/mirror-help/homebrew-bottles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/homebrew-bottles/</guid>
      <description>&lt;p&gt;homebrew-bottles.git镜像了&lt;a href=&#34;https://homebrew.bintray.com/&#34;&gt;预编译的 Homebrew 软件包&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;SJTUG镜像同时也提供了&lt;code&gt;homebrew-core&lt;/code&gt;和&lt;code&gt;homebrew-cask&lt;/code&gt;镜像，欢迎大家使用。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;p&gt;执行以下语句或加入到&lt;code&gt;~/.bashrc&lt;/code&gt;中。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.sjtug.sjtu.edu.cn/homebrew-bottles
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>kali</title>
      <link>https://sjtug.org/post/mirror-help/kali/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/kali/</guid>
      <description>&lt;p&gt;Kali Linux 是基于Debian的Linux发行版，设计用于数字鉴识和渗透测试。由 Offensive Security Ltd 维护和资助。&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;p&gt;编辑&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;，在头部添加：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;deb https://mirrors.sjtug.sjtu.edu.cn/kali kali-rolling main non-free contrib
deb-src https://mirrors.sjtug.sjtu.edu.cn/kali kali-rolling main non-free contrib
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>linuxliteos</title>
      <link>https://sjtug.org/post/mirror-help/linuxliteos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/linuxliteos/</guid>
      <description>&lt;p&gt;Linux Lite 是一个基于 Ubuntu 长期支持版本（LTS）的 Linux 发行版，搭载 Xfce 桌面环境。Linux Lite 的目的是将 Windows 用户引入 Linux，对新手比较友好。其旨在提供一套完整的应用程序来帮助用户满足用户日常的计算需求，这包括完整的办公套件、媒体播放器和其他基本的日常软件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt; 在终端输入&lt;code&gt;sudo nano /etc/apt/sources.list&lt;/code&gt;，删除原有内容，用以下内容代替。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb https://mirrors.sjtug.sjtu.edu.cn/linuxliteos/ emerald main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo apt update&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>maven-central</title>
      <link>https://sjtug.org/post/mirror-help/maven-central/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/maven-central/</guid>
      <description>&lt;p&gt;Apache Maven仓库存放了可用于Maven的大量软件包（特别是Java软件）。目前本镜像为 &lt;a href=&#34;http://repo.maven.apache.org/maven2/&#34;&gt;http://repo.maven.apache.org/maven2/&lt;/a&gt; 的反向代理，能够加速安装。&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;p&gt;修改Maven根目录下的&lt;code&gt;conf/setting.xml&lt;/code&gt;，增加一节&lt;code&gt;&amp;lt;mirror /&amp;gt;&lt;/code&gt;，具体如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;mirrors&amp;gt;
    &amp;lt;!-- Other mirrors... --&amp;gt;
    &amp;lt;mirror&amp;gt;
        &amp;lt;id&amp;gt;sjtugmaven&amp;lt;/id&amp;gt;
        &amp;lt;name&amp;gt;sjtug maven&amp;lt;/name&amp;gt;
        &amp;lt;url&amp;gt;https://mirrors.sjtug.sjtu.edu.cn/maven-central/&amp;lt;/url&amp;gt;
        &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt;
    &amp;lt;/mirror&amp;gt;
&amp;lt;/mirrors&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>msys2</title>
      <link>https://sjtug.org/post/mirror-help/msys2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/msys2/</guid>
      <description>&lt;p&gt;&lt;strong&gt;收录架构&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MINGW: i686, x86_64&lt;/li&gt;
&lt;li&gt;MSYS: i686, x86_64&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;获取基本组件包&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;请访问该镜像目录下的&lt;code&gt;distrib/&lt;/code&gt;目录（&lt;a href=&#34;http://mirrors.sjtug.sjtu.edu.cn/msys2/distrib/x86_64/&#34;&gt;x86_64&lt;/a&gt;、&lt;a href=&#34;http://mirrors.sjtug.sjtu.edu.cn/msys2/distrib/i686/&#34;&gt;i686&lt;/a&gt;），找到名为&lt;code&gt;msys2-&amp;lt;架构&amp;gt;-&amp;lt;日期&amp;gt;.exe&lt;/code&gt;的文件（如&lt;code&gt;msys2-x86_64-20141113.exe&lt;/code&gt;），下载安装即可。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pacman的配置&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;编辑&lt;code&gt;/etc/pacman.d/mirrorlist.mingw32&lt;/code&gt;，在文件开头添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Server = http://mirrors.sjtug.sjtu.edu.cn/msys2/mingw/i686
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑&lt;code&gt;/etc/pacman.d/mirrorlist.mingw64&lt;/code&gt;，在文件开头添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Server = http://mirrors.sjtug.sjtu.edu.cn/msys2/mingw/x86_64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编辑&lt;code&gt;/etc/pacman.d/mirrorlist.msys&lt;/code&gt;，在文件开头添加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Server = http://mirrors.sjtug.sjtu.edu.cn/msys2/msys/$arch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后执行&lt;code&gt;pacman -Sy&lt;/code&gt;刷新软件包数据即可。&lt;/p&gt;

&lt;p&gt;注：本Help参考自&lt;a href=&#34;https://lug.ustc.edu.cn/wiki/mirrors/help/msys2&#34;&gt;UTSC镜像&lt;/a&gt;和&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/msys2/&#34;&gt;清华镜像&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mx-isos</title>
      <link>https://sjtug.org/post/mirror-help/mx-isos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/mx-isos/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://mxlinux.org/&#34;&gt;MX Linux&lt;/a&gt; 是一个基于Debian 稳定分支的面向桌面的Linux发行，它是antiX 及早先的MEPIS 社区合作的产物。它采用Xfce 作为缺省桌面，是一个轻量级操作系统。&lt;/p&gt;

&lt;p&gt;本Repo镜像了MX Linux和AntiX的安装镜像。具体信息可以参见 &lt;a href=&#34;https://mxlinux.org/wiki/system/iso-download-mirrors&#34;&gt;https://mxlinux.org/wiki/system/iso-download-mirrors&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;本站另有&lt;code&gt;mx-packages&lt;/code&gt;镜像，包括了MX Linux与AntiX的软件包，欢迎大家使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mx-packages</title>
      <link>https://sjtug.org/post/mirror-help/mx-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/mx-packages/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://mxlinux.org/&#34;&gt;MX Linux&lt;/a&gt; 是一个基于Debian 稳定分支的面向桌面的Linux发行，它是antiX 及早先的MEPIS 社区合作的产物。它采用Xfce 作为缺省桌面，是一个轻量级操作系统。&lt;/p&gt;

&lt;p&gt;本Repo镜像了MX Linux和AntiX的软件包。&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;（推荐）打开MX Repo Manager，选择SJTUG mirror&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;（手动）：
打开&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;，将&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://mxrepo.com/mx/repo/ stretch non-free main
deb http://mxrepo.com/mx/testrepo/ mx7 test
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;替换成&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://mirrors.sjtug.sjtu.edu.cn/mx-packages/mx/repo stretch main non-free
deb http://mirrors.sjtug.sjtu.edu.cn/mx-packages/mx/testrepo test
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>nodejs-release</title>
      <link>https://sjtug.org/post/mirror-help/nodejs-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/nodejs-release/</guid>
      <description>&lt;p&gt;本链接反代了 &lt;a href=&#34;https://nodejs.org/dist/&#34;&gt;https://nodejs.org/dist/&lt;/a&gt; 。可以在此手动下载Nodejs的安装包，也可以配合Nodejs环境使用：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;：&lt;code&gt;export NODE_MIRROR=https://mirrors.sjtug.sjtu.edu.cn/nodejs-release/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nvm&lt;/code&gt;：&lt;code&gt;export NVM_NODEJS_ORG_MIRROR=https://mirrors.sjtug.sjtu.edu.cn/nodejs-release&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>npm-registry</title>
      <link>https://sjtug.org/post/mirror-help/npm-registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/npm-registry/</guid>
      <description>&lt;p&gt;npm-registry 源是 NodeJS 的官方包管理 npm 的仓库的反向代理，可以加速&lt;code&gt;npm install&lt;/code&gt;等需要下载的命令。&lt;/p&gt;

&lt;p&gt;使用方法：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;短期使用&lt;/strong&gt;: 在&lt;code&gt;npm&lt;/code&gt;命令后加上&lt;code&gt;--registry=https://mirrors.sjtug.sjtu.edu.cn/npm-registry&lt;/code&gt;的参数，即可使用SJTUG源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;长期使用&lt;/strong&gt;：

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Xnix&lt;/strong&gt;: 打开&lt;code&gt;$HOME/.npmrc&lt;/code&gt;，添加以下内容：
&lt;code&gt;
registry=https://mirrors.sjtug.sjtu.edu.cn/npm-registry
&lt;/code&gt;
即可大幅提升下载速度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 编辑&lt;code&gt;%USERPROFILE%\.npmrc&lt;/code&gt;，同样加入以上内容即可使用SJTUG镜像源。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>packagist</title>
      <link>https://sjtug.org/post/mirror-help/packagist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/packagist/</guid>
      <description>&lt;p&gt;Packagist 是 PHP 包管理软件 Composer 的源。本镜像仅包含所有包的 metadata，并非全量同步镜像。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;全局设置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;composer config -g repo.packagist composer https://packagist.mirrors.sjtug.sjtu.edu.cn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者仅对一个项目设置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;composer config repo.packagist composer https://packagist.mirrors.sjtug.sjtu.edu.cn
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>parrot</title>
      <link>https://sjtug.org/post/mirror-help/parrot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/parrot/</guid>
      <description>&lt;p&gt;Parrot Security OS是一个基于Debian的Linux发行版，专注于计算机安全。它专为渗透测试，漏洞评估和缓解，计算机取证和匿名Web浏览而设计。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;修改&lt;code&gt;etc/apt/sources.list.d/parrot.list&lt;/code&gt;的以下内容：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#stable repository
deb https://mirrors.sjtug.sjtu.edu.cn/parrot/ parrot main contrib non-free
#deb-src https://mirrors.sjtug.sjtu.edu.cn/parrot/ parrot main contrib non-free
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>putty</title>
      <link>https://sjtug.org/post/mirror-help/putty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/putty/</guid>
      <description>&lt;p&gt;PuTTY是一个支持Telnet、SSH、rlogin、纯TCP以及串行端口连接软件。&lt;/p&gt;

&lt;p&gt;使用方法：直接打开点击Download&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pypi-packages</title>
      <link>https://sjtug.org/post/mirror-help/pypi-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/pypi-packages/</guid>
      <description>&lt;p&gt;&lt;del&gt;2019年10月10日起，由于 PyPI 占用过多空间，我们将 PyPI 改为了反代。PyPI 源的服务质量可能有所下降。&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;2020年12月7日起，我们通过智能缓存全量同步了 PyPI。欢迎继续使用。&lt;/p&gt;

&lt;p&gt;PyPI 是 Python 官方的包仓库，可以通过 &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;easy_install&lt;/code&gt; 等方式从 PyPI 安装 &lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;tensorflow&lt;/code&gt; 等常用包。&lt;/p&gt;

&lt;p&gt;执行指令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip config set global.index-url https://mirrors.sjtug.sjtu.edu.cn/pypi/web/simple
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者创建或编辑 &lt;code&gt;~/.config/pip/pip.conf&lt;/code&gt; 文件，加入或修改 &lt;code&gt;index-url&lt;/code&gt; 相关段落为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[global]
index-url = https://mirrors.sjtug.sjtu.edu.cn/pypi/web/simple
format = columns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;临时使用：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -i https://mirrors.sjtug.sjtu.edu.cn/pypi/web/simple numpy
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>pypi/web/simple</title>
      <link>https://sjtug.org/post/mirror-help/pypi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/pypi/</guid>
      <description>&lt;p&gt;&lt;del&gt;2019年10月10日起，由于 PyPI 占用过多空间，我们将 PyPI 改为了反代。PyPI 源的服务质量可能有所下降。&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;2020年12月7日起，我们通过智能缓存全量同步了 PyPI。欢迎继续使用。&lt;/p&gt;

&lt;p&gt;PyPI 是 Python 官方的包仓库，可以通过 &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;easy_install&lt;/code&gt; 等方式从 PyPI 安装 &lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;tensorflow&lt;/code&gt; 等常用包。&lt;/p&gt;

&lt;p&gt;执行指令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip config set global.index-url https://mirrors.sjtug.sjtu.edu.cn/pypi/web/simple
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者创建或编辑 &lt;code&gt;~/.config/pip/pip.conf&lt;/code&gt; 文件，加入或修改 &lt;code&gt;index-url&lt;/code&gt; 相关段落为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;[global]
index-url = https://mirrors.sjtug.sjtu.edu.cn/pypi/web/simple
format = columns
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;临时使用：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install -i https://mirrors.sjtug.sjtu.edu.cn/pypi/web/simple numpy
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>raspberry-pi-os-images</title>
      <link>https://sjtug.org/post/mirror-help/raspberry-pi-os-images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/raspberry-pi-os-images/</guid>
      <description>&lt;p&gt;主仓库地址： &lt;a href=&#34;http://downloads.raspberrypi.org/&#34;&gt;http://downloads.raspberrypi.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;根据需要的版本进入以下包含 Raspberry Pi OS 系统镜像的目录，选择&lt;code&gt;.zip&lt;/code&gt;文件下载即可。推荐使用 &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt; 将镜像写入 SD 卡&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Raspberry Pi OS 版本&lt;/th&gt;
&lt;th&gt;存储目录&lt;/th&gt;
&lt;th&gt;预计大小&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;精简版 Raspberry Pi OS 系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_lite_armhf/images/&#34;&gt;raspios_lite_armhf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;0.4 GiB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;常规版 Raspberry Pi OS 系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_armhf/images/&#34;&gt;raspios_armhf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1.1 GiB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;完整版 Raspberry Pi OS 系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_full_armhf/images/&#34;&gt;raspios_full_armhf&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;2.5 GiB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;精简版 Raspberry Pi OS 64位系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_lite_arm64/images/&#34;&gt;raspios_lite_arm64&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;0.5 GiB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;常规版 Raspberry Pi OS 64位系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_arm64/images/&#34;&gt;raspios_arm64&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1.0 GiB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;暂无 Raspberry Pi OS 64位完整版系统&lt;/li&gt;
&lt;li&gt;Raspberry Pi OS 是 Raspbian 的后继者，二者名称不同，但功能和界面相同。首个 Raspberry Pi OS 系统发行于 2020年5月27日&lt;/li&gt;
&lt;li&gt;2012年7月15日-2020年2月14日期间发行的旧版 Raspbian 系统镜像与 Raspberry Pi OS 位于不同目录，各版本分别位于：&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspbian_lite/images/&#34;&gt;raspbian_lite&lt;/a&gt;、&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspbian/images/&#34;&gt;raspbian&lt;/a&gt;、&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspbian_full/images/&#34;&gt;raspbian_full&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Raspberry Pi OS 常用设置&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;无头初始化设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;启用 SSH：在 SD 卡 boot 分区中创建名为 &lt;code&gt;ssh&lt;/code&gt; （不应包括任何扩展名或其他字符）的空白文件&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;预设 WiFi 信息：在 SD 卡 boot 分区中创建名为 &lt;code&gt;wpa_supplicant.conf&lt;/code&gt; 的文本文件，按如下格式填写 &lt;code&gt;YOUR_WiFi_NAME&lt;/code&gt; 和 &lt;code&gt;YOUR_WiFi_PASSWORD&lt;/code&gt; ，推荐设置为本机 WiFi 热点或拥有管理员权限的无线路由器 WiFi ，以便查找树莓派的 IP 地址&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=CN
    
network={
    ssid=&amp;quot;YOUR_WiFi_NAME&amp;quot;
    psk=&amp;quot;YOUR_WiFi_PASSWORD&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;远程连接：插卡启动树莓派，在 WiFi 热点中查询 IP 分配情况，确认树莓派的 IP 地址，使用 SSH 进行远程连接。树莓派的默认 SSH 端口为 22，用户名为 &lt;code&gt;pi&lt;/code&gt; ，默认密码为 &lt;code&gt;raspberry&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;命令行下的设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在终端输入 &lt;code&gt;sudo raspi-config&lt;/code&gt; 命令进行基本设置。可将时区设置为 &lt;code&gt;Asia/Shanghai&lt;/code&gt; ，默认区域更改为 &lt;code&gt;zh_CN.UTF-8&lt;/code&gt; ，可启用 VNC 以进行远程桌面连接&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;图形界面下的设置&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;首次进入桌面时，根据提示进行鼠标操作设置即可&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;apt 软件源修改&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Raspberry Pi OS 系统镜像内预置的 apt 软件源在国内访问缓慢，可将 apt 软件源更改为 SJTUG 镜像源&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将 &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; 文件中的 raspbian 存储库由 &lt;code&gt;http://raspbian.raspberrypi.org/raspbian/&lt;/code&gt; 更改为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/raspbian/raspbian/&lt;/code&gt; ，对于64位 Raspberry Pi OS ，将 &lt;code&gt;http://deb.debian.org/debian/&lt;/code&gt; 更改为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/debian/&lt;/code&gt; ，将 &lt;code&gt;http://deb.debian.org/debian-security/&lt;/code&gt; 更改为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/debian-security/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将 &lt;code&gt;/etc/apt/sources.list.d/raspi.list&lt;/code&gt; 文件中的 raspberrypi 存储库由 &lt;code&gt;http://archive.raspberrypi.org/debian/&lt;/code&gt; 更改为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/raspberrypi/debian/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可输入以下命令完成 apt 软件源设置（截至 2020-08-27 版仍然适用）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
sudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak
sudo sed -i &amp;quot;s|http://raspbian.raspberrypi.org/raspbian/|https://mirrors.sjtug.sjtu.edu.cn/raspbian/raspbian/|g&amp;quot; /etc/apt/sources.list
sudo sed -i &amp;quot;s|http://deb.debian.org/debian|https://mirrors.sjtug.sjtu.edu.cn/debian|g&amp;quot; /etc/apt/sources.list
sudo sed -i &amp;quot;s|http://archive.raspberrypi.org/debian/|https://mirrors.sjtug.sjtu.edu.cn/raspberrypi/debian/|g&amp;quot; /etc/apt/sources.list.d/raspi.list
sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;软件包更新&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;  sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>raspberrypi</title>
      <link>https://sjtug.org/post/mirror-help/raspberrypi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/raspberrypi/</guid>
      <description>&lt;p&gt;raspberrypi是树莓派基金会提供的软件源，包括 ui 相关程序及部分由树莓派基金会为树莓派编写的软件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;将&lt;code&gt;/etc/apt/sources.list.d/raspi.list&lt;/code&gt;中的&lt;code&gt;http://archive.raspberrypi.org/debian/&lt;/code&gt;更换成&lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/raspberrypi/debian/&lt;/code&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>raspbian</title>
      <link>https://sjtug.org/post/mirror-help/raspbian/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/raspbian/</guid>
      <description>&lt;p&gt;Raspberry Pi OS 是为树莓派设计，基于 Debian 的操作系统。本镜像提供了 Raspberry Pi OS 的官方软件源。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;更换软件源：&lt;/p&gt;

&lt;p&gt;编辑&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;，将所有的&lt;code&gt;deb&lt;/code&gt;与&lt;code&gt;deb-src&lt;/code&gt;之后的网址替换成&lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/raspbian/raspbian/&lt;/code&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>rust-static</title>
      <link>https://sjtug.org/post/mirror-help/rust-static/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/rust-static/</guid>
      <description>&lt;p&gt;rust-static储存了rust的工具链及&lt;code&gt;rustup&lt;/code&gt;本身的镜像。&lt;/p&gt;

&lt;p&gt;使用方法：安装&lt;code&gt;rustup&lt;/code&gt;，将以下环境变量加入&lt;code&gt;~/.bashrc&lt;/code&gt;或类似文件中：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;export RUSTUP_DIST_SERVER=https://mirrors.sjtug.sjtu.edu.cn/rust-static
export RUSTUP_UPDATE_ROOT=https://mirrors.sjtug.sjtu.edu.cn/rust-static/rustup
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu</title>
      <link>https://sjtug.org/post/mirror-help/ubuntu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/ubuntu/</guid>
      <description>&lt;p&gt;Ubuntu是一个基于Debian的Linux发行版，包含了常用的大量软件包。Ubuntu的目标在于为一般用户提供一个最新同时又相当稳定，主要以自由软件建构而成的作业系统。Ubuntu目前具有庞大的社群力量支持，用户可以方便地从社群获得帮助。&lt;/p&gt;

&lt;p&gt;SJTUG镜像源可以加速软件包的安装。&lt;/p&gt;

&lt;p&gt;使用方式：&lt;/p&gt;

&lt;p&gt;使用&lt;code&gt;sudo nano /etc/apt/sources.list&lt;/code&gt;打开镜像源列表文件。将类似于&lt;code&gt;http://cn.archive.ubuntu.com/ubuntu&lt;/code&gt;或&lt;code&gt;http://cn.archive.ubuntu.com/ubuntu&lt;/code&gt;的地址改成&lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/ubuntu&lt;/code&gt;，之后按&lt;code&gt;Ctrl-O 回车&lt;/code&gt;保存，按&lt;code&gt;Ctrl-X&lt;/code&gt;退出。最后执行&lt;code&gt;sudo apt update&lt;/code&gt;即可。&lt;/p&gt;

&lt;p&gt;镜像站一天同步一次 Ubuntu 镜像。为了取得最新的安全更新，我们不建议您将 &lt;code&gt;security.ubuntu.com&lt;/code&gt; 换成镜像源。&lt;/p&gt;

&lt;p&gt;您也可使用&lt;code&gt;sudo sed -i &#39;s/http:\/\/cn.archive.ubuntu.com/http:\/\/mirrors.sjtug.sjtu.edu.cn/g&#39; /etc/apt/sources.list&lt;/code&gt;指令直接批量修改。&lt;/p&gt;

&lt;p&gt;以下为修改后的镜像源列表文件的示例。请注意：下面的 &lt;code&gt;focal&lt;/code&gt; 只是一个例子，请将它换成自己使用的 Ubuntu 版本代号。否则系统会自动升级到 focal，且会导致未知的问题。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to
# newer versions of the distribution.
deb https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal main restricted
# deb-src https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal main restricted
deb https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-updates main restricted
# deb-src https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-updates main restricted
deb https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal universe
# deb-src https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal universe
deb https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-updates universe
# deb-src https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-updates universe
deb https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal multiverse
# deb-src https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal multiverse
deb https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-updates multiverse
# deb-src https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-updates multiverse
deb https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-backports main restricted universe multiverse
# deb-src https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-backports main restricted universe multiverse
deb http://archive.canonical.com/ubuntu focal partner
# deb-src http://archive.canonical.com/ubuntu focal partner
deb https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-security main restricted universe multiverse
# deb-src https://mirrors.sjtug.sjtu.edu.cn/ubuntu focal-security main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中&lt;code&gt;deb-src&lt;/code&gt;为源码镜像，默认注释以提高速度。可将原镜像列表备份后替换为上述内容。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>